
---------------------------------------------------------------
-------------------------- BOILERPLATE CODES ------------------
---------------------------------------------------------------

------------ CREATE TABLE IF NOT EXISTS -----------------------
CREATE OR REPLACE PROCEDURE CREATE_TABLE_IF_NOT_EXISTS(
  p_table_name IN VARCHAR2,
  p_create_query IN VARCHAR2
) AUTHID CURRENT_USER IS
n NUMBER(19) := 0;
BEGIN
  SELECT COUNT(*) INTO n FROM USER_TABLES WHERE TABLE_NAME = UPPER(p_table_name);
  IF (n = 0) THEN
    EXECUTE IMMEDIATE p_create_query  ;
  END IF;
END;
/

------------ ALTER TABLE ADD COLUMN -----------------------
CREATE OR REPLACE PROCEDURE ALTER_TABLE_ADD_COLUMN (
  p_table_name IN VARCHAR2,
  p_column_name IN VARCHAR2,
  p_alter_query IN VARCHAR2
) AUTHID CURRENT_USER IS
n NUMBER(19) := 0;
BEGIN
  SELECT COUNT(*) INTO n FROM ALL_TAB_COLUMNS
  WHERE TABLE_NAME = UPPER(p_table_name) AND COLUMN_NAME = UPPER(p_column_name);
  IF (n = 0) THEN
    EXECUTE IMMEDIATE p_alter_query  ;
  END IF;
END;
/

--------------- INSERT IF NOT EXISTS -----------------------
CREATE OR REPLACE PROCEDURE INSERT_IF_NOT_EXISTS (
  p_table_name              IN VARCHAR2,
  p_id_column_name          IN VARCHAR2,
  p_id_column_value         IN NUMBER,
  p_rest_columns            IN VARCHAR2,
  p_rest_values             IN VARCHAR2
) AUTHID CURRENT_USER IS
sql_script VARCHAR2(2048) := '';
BEGIN 
  sql_script := 'INSERT INTO ' || p_table_name || '(' || p_id_column_name || ',' || p_rest_columns || ')' || 
  ' SELECT ' || p_id_column_value || ',' || p_rest_values || 
  ' FROM DUAL WHERE NOT EXISTS (SELECT ' || p_id_column_name || ' FROM ' || p_table_name || 
  ' WHERE ' || p_id_column_name || ' = ' || p_id_column_value || ' ) ';
  EXECUTE IMMEDIATE sql_script;
END;
/

--------------- UPDATE IDENTITY IF NOT SET -----------------------
CREATE OR REPLACE PROCEDURE UPDATE_IDENTITY_IF_NOT_SET (
  p_table_name              IN VARCHAR2,
  p_id_column_name          IN VARCHAR2,
  p_id_start_with_value     IN NUMBER DEFAULT -1
) AUTHID CURRENT_USER IS
sql_script VARCHAR2(1024) := '';
n NUMBER(19) := 0;
BEGIN 
  sql_script := 'SELECT MAX(' || p_id_column_name || ') FROM ' || p_table_name;
  EXECUTE IMMEDIATE sql_script INTO n;
  IF (n < p_id_start_with_value) THEN
    sql_script := 'ALTER TABLE ' || p_table_name || ' MODIFY ' || p_id_column_name ||
    ' GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH ' || p_id_start_with_value || ' )';
    EXECUTE IMMEDIATE sql_script;
  END IF; 

  IF (p_id_start_with_value = -1) THEN
    sql_script := 'ALTER TABLE ' || p_table_name || ' MODIFY ' || p_id_column_name ||
    ' GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH LIMIT VALUE )';
    EXECUTE IMMEDIATE sql_script;
  END IF;
END;
/

------------ ALTER TABLE MODIFY COLUMN -----------------------
CREATE OR REPLACE PROCEDURE ALTER_TABLE_MODIFY_COLUMN(
    p_table_name IN VARCHAR2,
    p_column_name IN VARCHAR2,
    p_existing_datatype IN VARCHAR2,
    p_alter_query IN VARCHAR2
) AUTHID CURRENT_USER IS
    n                NUMBER(19)   := 0;
    substr_data_type VARCHAR2(32) := '';
BEGIN
    EXECUTE IMMEDIATE 'SELECT NVL(SUBSTR(REPLACE(''' || p_existing_datatype ||
                      ''', '' '', ''''), 0, INSTR(REPLACE(''' || p_existing_datatype ||
                      ''', '' '', ''''), ''('') - 1), REPLACE(''' || p_existing_datatype ||
                      ''', '' '', '''')) FROM DUAL' INTO substr_data_type;
    SELECT COUNT(*)
    INTO n
    FROM ALL_TAB_COLUMNS
    WHERE TABLE_NAME = UPPER(p_table_name)
      AND COLUMN_NAME = UPPER(p_column_name)
      AND DATA_TYPE = upper(substr_data_type);
    IF (n = 1) THEN
        EXECUTE IMMEDIATE 'ALTER TABLE ' || p_table_name || ' ADD TEMP ' || p_existing_datatype;
        EXECUTE IMMEDIATE 'UPDATE ' || p_table_name || ' SET TEMP =' || p_column_name ||
                          ' WHERE 1=1';
        EXECUTE IMMEDIATE 'UPDATE ' || p_table_name || ' SET ' || p_column_name ||
                          '=NULL WHERE 1=1';
        EXECUTE IMMEDIATE p_alter_query;
        EXECUTE IMMEDIATE 'UPDATE ' || p_table_name || ' SET ' || p_column_name ||
                          ' = TEMP WHERE 1=1';
        EXECUTE IMMEDIATE 'ALTER TABLE ' || p_table_name || ' DROP COLUMN TEMP';
    END IF;
END;
/

------------ ALTER TABLE ADD INDEX -----------------------
CREATE OR REPLACE PROCEDURE ALTER_TABLE_ADD_INDEX_IF_NOT_EXIST(
    p_table_name IN VARCHAR2,
    p_constraint_name IN VARCHAR2,
    p_add_constraint_query IN VARCHAR2
) AUTHID CURRENT_USER IS
    n                NUMBER(19)   := 0;
BEGIN
    SELECT COUNT(*)
    INTO n
    FROM USER_CONSTRAINTS
    WHERE TABLE_NAME = UPPER(p_table_name)
      AND CONSTRAINT_NAME = UPPER(p_constraint_name);
    IF (n = 0) THEN
        EXECUTE IMMEDIATE p_add_constraint_query;
    END IF;
END;
/
-------------------------------------------------------------
CREATE OR REPLACE PROCEDURE ALTER_TABLE_DELETE_INDEX_IF_EXISTS(
    p_table_name IN VARCHAR2,
    p_constraint_name IN VARCHAR2,
    p_delete_constraint_query IN VARCHAR2
) AUTHID CURRENT_USER IS
    n                NUMBER(19)   := 0;
BEGIN
    SELECT COUNT(*)
    INTO n
    FROM USER_CONSTRAINTS
    WHERE TABLE_NAME = UPPER(p_table_name)
      AND CONSTRAINT_NAME = UPPER(p_constraint_name);
    IF (n = 1) THEN
        EXECUTE IMMEDIATE p_delete_constraint_query;
    END IF;
END;
/

--------------------- ALTER TABLE ADD CONSTRAINT ---------------------
CREATE OR REPLACE PROCEDURE ALTER_TABLE_ADD_CONSTRAINT_IF_NOT_EXIST(
	P_TABLE_NAME IN VARCHAR2,
	P_CONSTRAINT_NAME IN VARCHAR2,
	P_CONSTRAINT_CRITERIA IN VARCHAR2
) AUTHID CURRENT_USER IS
	n NUMBER(19) := 0;
BEGIN
	SELECT COUNT(*)
	INTO n
	FROM USER_CONSTRAINTS
	WHERE TABLE_NAME = UPPER(P_TABLE_NAME)
	  AND CONSTRAINT_NAME = UPPER(P_CONSTRAINT_NAME);
	IF (n = 0) THEN
		EXECUTE IMMEDIATE 'ALTER TABLE ' || P_TABLE_NAME || ' ADD CONSTRAINT ' ||
						  P_CONSTRAINT_NAME || ' ' || P_CONSTRAINT_CRITERIA;
	END IF;
END;
/

--------------------- ALTER TABLE DROP CONSTRAINT ---------------------
CREATE OR REPLACE PROCEDURE ALTER_TABLE_DROP_CONSTRAINT_IF_EXISTS(
	P_TABLE_NAME IN VARCHAR2,
	P_CONSTRAINT_NAME IN VARCHAR2
) AUTHID CURRENT_USER IS
	n NUMBER(19) := 0;
BEGIN
	SELECT COUNT(*)
	INTO n
	FROM USER_CONSTRAINTS
	WHERE TABLE_NAME = UPPER(P_TABLE_NAME)
	  AND CONSTRAINT_NAME = UPPER(P_CONSTRAINT_NAME);
	IF (n = 1) THEN
		EXECUTE IMMEDIATE 'ALTER TABLE ' || P_TABLE_NAME || ' DROP CONSTRAINT ' ||
						  P_CONSTRAINT_NAME;
	END IF;
END;
/
